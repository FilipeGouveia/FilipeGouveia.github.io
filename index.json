[{"authors":null,"categories":null,"content":" I am a Research Associate at the Department of Computer Science of the University of Oxford in the Logic and Learning (LOL) group, in the field of Inductive Logic Programming.\nI obtained an MSc in Information Systems and Computer Engineering from IST - Universidade de Lisboa in 2012, focussing on intelligent systems, and information technology. Then, I worked in the private sector for some years, as a software developer. Here, I participated in several projects, developing, for example, geographical information systems web services, and thematic websites. In 2021, I obtained a Ph.D. in Computer Science and Engineering from IST - Universidade de Lisboa, being approved with distinction. During my Ph.D., I was awarded with a doctoral grant from Fundação para a Ciência e Tecnologia (FCT). My Ph.D work focused on the application of logic-based approaches and algorithms to revise Boolean logical models of biological regulatory networks.\nFrom 2016 to 2023, I was a researcher at INESC-ID Lisboa in the Automated Reasoning and Software Reliability (ARSR) group. Since 2017, I have been a teaching assistant at IST - Universidade de Lisboa, in the Department of Computer Science, in the courses of Introduction to Algorithms and Data Structures, Analysis and Synthesis of Algorithms, Natural Language, Algorithms for Computational Logic, and Artificial Intelligence, being awarded IST Excellent Teachers 2018/2019, IST Excellent Teachers 2019/2020, and IST Excellent Teachers 2020/2021.\n","date":1711843200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1711843200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"2024-03-31T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a Research Associate at the Department of Computer Science of the University of Oxford in the Logic and Learning (LOL) group, in the field of Inductive Logic Programming.","tags":null,"title":"Filipe Gouveia","type":"authors"},{"authors":["Alexandre Lemos","Filipe Gouveia","Inês Lynce","Pedro T. Monteiro"],"categories":null,"content":"","date":1711843200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1711843200,"objectID":"1c54a8a72d7ed7c0633d4bd409f0f92d","permalink":"https://filipegouveia.github.io/publication/2024/jair/","publishdate":"2024-03-31T00:00:00Z","relpermalink":"/publication/2024/jair/","section":"publication","summary":"This paper proposes an iterative Maximum Satisfiability (MaxSAT) approach designed to solve train scheduling optimization problems. The generation of railway timetables is known to be intractable for a single track. We consider hundreds of trains on interconnected multi-track railway networks with complex connections between trains. Furthermore, the proposed algorithm is incremental to reduce the impact of time discretization.The performance of our approach is evaluated with the real-world Swiss Federal Railway (SBB) Crowd Sourcing Challenge benchmark and Periodic Event Scheduling Problems benchmark (PESPLib). The execution time of the proposed approach is shown to be, on average, twice as fast as the best existing solution for the SBB instances. In addition, we achieve a significant improvement over SAT-based solutions for solving the PESPLib instances.We also analyzed real schedule data from Switzerland and the Netherlands to create a disruption generator based on probability distributions. The novel incremental algorithm allows solving the train scheduling problem under disruptions with better performance than traditional algorithms.","tags":["Train Scheduling","SAT","MaxSAT"],"title":"Iterative Train Scheduling under Disruption with Maximum Satisfiability","type":"publication"},{"authors":["Andrew Cropper","Céline Hocquette","Filipe Gouveia"],"categories":null,"content":"Ref. EP/V040340/1\nFinanced by: EPSRC\nAwarded to: Andrew Cropper at the University of Oxford\nBuilding machines that automatically write computer programs is a long-standing grand challenge in AI. Such a development would offer the potential to build bug-free and efficient programs without required specialist knowledge.\nTo work towards this grand challenge, this project will build on major recent breakthroughs in Inductive Logic Programming (ILP), a form of machine learning based on mathematical logic. Because of these breakthroughs, ILP currently has the ability of a first-year computer science student: given much guidance, it can learn simple algorithms and build small programs. This project aims to advance ILP to the level of a computer science PhD student so that given little guidance it can discover novel and complex algorithms and build large programs.\nAs a marker of success, a key objective is to use an AutoCS to discover a novel algorithm and publish it in a computer science journal. Such a result would be a landmark achievement for AI and would herald a new era of automatic scientific discovery.\nMembers Andrew Cropper (PI) Céline Hocquette Filipe Gouveia ","date":1693526400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1693526400,"objectID":"3ac7435e027f39773637a8270ddf31b1","permalink":"https://filipegouveia.github.io/project/autocs/","publishdate":"2023-09-01T00:00:00Z","relpermalink":"/project/autocs/","section":"project","summary":"The Automatic Computer Scientist","tags":["Inductive Logic Programming","Program Synthesis","Automated Reasoning","Answer Set Programming"],"title":"AutoCS","type":"project"},{"authors":["Inês Lynce","Filipe Gouveia","Vasco Manquinho"],"categories":null,"content":"Refª 2022.03537.PTDC\nType: National Project\nFinanced by: FCT\nPrime Contractor: R - INESC-ID Lisboa (Other) - Lisboa, Portugal\nProject RIGA aims to propose the use of automated reasoning to identify proxy attributes in training datasets without prior background knowledge of the relations between attributes. In project RIGA it is not only desired to identify single attributes that act as proxy attributes of a given protected attribute, but also combinations of attributes that act as proxy attributes. In the latter case, it is considered that two or more unprotected attributes combined act as proxy attributes, where each one of these attributes individually are not proxy attributes. This raises a challenging combinatorial problem.\nThe goal of project RIGA is the application of logic-based approaches to identify potential proxy attributes (single or combined) in datasets that can lead to discriminatory Machine Learning models. In the identification of proxy attributes, different relations between unprotected and protected attributes are considered, such as equivalence and implication. Moreover, it is considered that a proxy attribute may have a degree of confidence associated. For example, if it is not possible to infer accurately all the values (100%) of a protected attribute from the information of a set of unprotected attributes, but it is possible to infer most of the values (e.g. 90 %), then one may want to consider such set of unprotected attributes as proxy attributes as well.\nMembers Inês Lynce (PI) Filipe Gouveia (Co-PI) Vasco Manquinho ","date":1678579200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1678579200,"objectID":"0285475ba5331ad424d1e55a306c044c","permalink":"https://filipegouveia.github.io/project/riga/","publishdate":"2023-03-12T00:00:00Z","relpermalink":"/project/riga/","section":"project","summary":"Reasoning Over Indirect Discrimination","tags":["Automated Reasoning","Answer Set Programming","Fairness","Bias"],"title":"RIGA","type":"project"},{"authors":["Filipe Gouveia"],"categories":null,"content":"","date":1631836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1631836800,"objectID":"679d05c33bd73b0ce6ee87de6c2c8c65","permalink":"https://filipegouveia.github.io/publication/theses/phd/","publishdate":"2021-09-17T00:00:00Z","relpermalink":"/publication/theses/phd/","section":"publication","summary":"Complex cellular processes can be represented by biological regulatory networks. Computational models of such networks are essential to have a better understanding of the corresponding cellular processes, allowing the reproduction of known behaviours, the testing of hypotheses, and the identification of predictions in silico. However, the construction of these models is still mainly a manual task, and therefore prone to error. Additionally, as new data is acquired, the existing models must be revised. Here, we propose a model revision procedure, capable of providing the set of minimal repairs to render a Boolean logical model of a biological regulatory network consistent with a set of experimental observations. The proposed model revision procedure takes advantage of a logic-based approach to verify whether a model is consistent with a given set of experimental observations. In case of inconsistency, the consistency check procedure implemented using Answer Set Programming (ASP) determines the minimum number of inconsistent nodes of the model and corresponding reason of inconsistency. An algorithm to search for possible sets of repair operations to render an inconsistent model consistent is proposed. In this work, four repair operations are considered: changing a regulatory function; changing a type of interaction; removing a regulator; and adding a regulator. The model revision approach presented here, considers confronting a Boolean logical model with stable state or time-series observations. Moreover, for time-series observations, both synchronous and asynchronous update schemes are considered. The proposed model revision approach is tested on five published well known biological models. Corrupted versions of these models are generated by performing random changes. The corrupted models are confronted with stable state observations, corresponding to the stable states of the original models, using the presented model revision procedure. Moreover, different time-series observations are generated, consistent with the original models, to assess whether the model revision approach is able to revise the corrupted model under time-series observations. The proposed method is able to repair the majority of the corrupted models, considering stable state and time-series observations. Moreover, all the optimal solutions to repair the inconsistent models are produced.","tags":["ModRev","Model Revision","Logical Models","Answer Set Programming"],"title":"Model Revision of Boolean Logical Models of Biological Regulatory Networks","type":"publication"},{"authors":["Filipe Gouveia","Inês Lynce","Pedro T. Monteiro"],"categories":null,"content":"","date":1601337600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1601337600,"objectID":"3638c009d34787167621c4b810266cc3","permalink":"https://filipegouveia.github.io/publication/2020/cmsb/","publishdate":"2020-09-29T00:00:00Z","relpermalink":"/publication/2020/cmsb/","section":"publication","summary":"Biological regulatory networks can be represented by computational models, which allow the study and the analysis of biological behaviours, therefore providing a better understanding of a given biological process. However, as new information is acquired, biological models may need to be revised, in order to also account for this new information. Here, we present a model revision tool, capable of repairing inconsistent Boolean biological models. Moreover, the tool is able to confront the models, both with steady state observations, as well as time-series data, considering both synchronous and asynchronous update schemes. The tool was tested with a well-known biological model that was corrupted with different random changes. The presented tool was able to successfully repair the majority of the corrupted models.","tags":["ModRev","Model Revision","Logical Models","Answer Set Programming"],"title":"ModRev - Model Revision Tool for Boolean Logical Models of Biological Regulatory Networks","type":"publication"},{"authors":["Filipe Gouveia","Inês Lynce","Pedro T. Monteiro"],"categories":null,"content":"","date":1589241600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589241600,"objectID":"32dbad171c96f890f8589e8a519d64ab","permalink":"https://filipegouveia.github.io/publication/2020/biorxiv/","publishdate":"2020-05-12T00:00:00Z","relpermalink":"/publication/2020/biorxiv/","section":"publication","summary":"Motivation: Complex cellular processes can be represented by biological regulatory networks. Computational models of such networks have successfully allowed the reprodution of known behaviour and to have a better understanding of the associated cellular processes. However, the construction of these models is still mainly a manual task, and therefore prone to error. Additionally, as new data is acquired, existing models must be revised. Here, we propose a model revision approach of Boolean logical models capable of repairing inconsistent models confronted with time-series observations. Moreover, we account for both synchronous and asynchronous dynamics.\nResults: The proposed tool is tested on five well known biological models. Different time-series observations are generated, consistent with these models. Then, the models are corrupted with different random changes. The proposed tool is able to repair the majority of the corrupted models, considering the generated time-series observations. Moreover, all the optimal solutions to repair the models are produced.","tags":["ModRev","Model Revision","Logical Models","Answer Set Programming"],"title":"Semi-automatic model revision of Boolean regulatory networks: confronting time-series observations with (a)synchronous dynamics","type":"publication"},{"authors":null,"categories":null,"content":"Ref: LISBOA-01-0247-FEDER-045917\nThe ultimate goal of GOLEM is to find a sustainable solution for the increasing need for complex enterprise digital systems and the lack of people with enough technical skills for creating them. We believe that the only realistic long term solution to this problem is to automate insofar as possible the creation of such systems. In doing so, not only the creation of enterprise software is sped up, but also, and more importantly, people with non-programming backgrounds are granted the opportunity to participate in the digitization effort.\nIn the GOLEM project, new software development approaches will be explored, building on what we believe to be the state of the art of rapid and easy enterprise software development: low-code platforms, in particular, the world leading OutSystems development platform. Like all other low-code solutions on the market, even though the OutSystems platform enables great productivity and short development cycles through visual development and deployment automation, it still requires knowledge about programming and software architectures that only experienced software developers have.\nThe GOLEM project aims to enable non-programmers to develop enterprise-grade applications by evolving the OutSystems low-code development model to a new fully integrated and interactive development experience in which programming is automated, based on natural language specifications, examples given by the developer, point and click demonstrations, or sketches. The output of that automation is not only code but also a live preview of the application’s behavior that allows the developer to understand the effects of his actions.\n","date":1585699200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585699200,"objectID":"61d319df35c838cba8ba20c885303fce","permalink":"https://filipegouveia.github.io/project/golem/","publishdate":"2020-04-01T00:00:00Z","relpermalink":"/project/golem/","section":"project","summary":"Automated Programming To Revolutionize App Development","tags":["GOLEM","Program Synthesis"],"title":"GOLEM","type":"project"},{"authors":["Filipe Gouveia","Inês Lynce","Pedro T. Monteiro"],"categories":null,"content":"","date":1580947200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1580947200,"objectID":"5d85e80be28408c2201a939d29cc0c73","permalink":"https://filipegouveia.github.io/publication/2020/jcb/","publishdate":"2020-02-06T00:00:00Z","relpermalink":"/publication/2020/jcb/","section":"publication","summary":"Models of biological regulatory networks are essential to understand cellular processes. However, the definition of such models is still mostly manually performed, and consequently prone to error. Moreover, as new experimental data are acquired, models need to be revised and updated. Here, we propose a model revision procedure and associated tool, capable of providing the set of minimal repairs to render a model consistent with a set of experimental observations. We consider four possible repair operations, using a lexicographic optimization criterion, giving preference to function repairs over topological ones. Also, we consider observations at stable state discarding the model dynamics. In this article, we extend our previous work to tackle the problem of repairing nodes with multiple reasons of inconsistency. We evaluate our tool on five publicly available logical models. We perform random changes considering several parameter configurations to assess the tool repairing capabilities. Whenever a model is repaired under the time limit, the tool successfully produces the optimal solutions to repair the model. Instances were generated without the previous limitation to validate this extended approach.","tags":["ModRev","Model Revision","Logical Models","Answer Set Programming"],"title":"Revision of Boolean Models of Regulatory Networks Using Stable State Observations","type":"publication"},{"authors":["Filipe Gouveia","Inês Lynce","Pedro T. Monteiro"],"categories":null,"content":"","date":1558224e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1558224e3,"objectID":"a7c259056e9f069ae57b84b6bb3eb39e","permalink":"https://filipegouveia.github.io/publication/2019/isbra/","publishdate":"2019-05-19T00:00:00Z","relpermalink":"/publication/2019/isbra/","section":"publication","summary":"Models of biological regulatory networks are essential to understand the cellular processes. However, the definition of such models is still mostly manually performed, and consequently prone to error. Moreover, as new experimental data is acquired, models need to be revised and updated. Here, we propose a model revision tool, capable of proposing the set of minimum repairs to render a model consistent with a set of experimental observations. We consider four possible repair operations, giving preference to function repairs over topological ones. Also, we consider observations at stable state, i.e., we do not consider the model dynamics. We evaluate our tool on five known logical models. We perform random changes considering several parameter configurations to assess the tool repairing capabilities. Whenever a model is repaired under the time limit, the tool successfully produces the optimal solutions to repair the model. Also, the number of repair operations required is less than or equal to the number of random changes applied to the original model.","tags":["ModRev","Model Revision","Logical Models","Answer Set Programming"],"title":"Model revision of boolean regulatory networks at stable state","type":"publication"},{"authors":["Filipe Gouveia","Inês Lynce","Pedro T. Monteiro"],"categories":null,"content":"","date":1542585600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1542585600,"objectID":"550ec30009369bcc1a6877d778a685de","permalink":"https://filipegouveia.github.io/publication/2018/iclp/","publishdate":"2018-11-19T00:00:00Z","relpermalink":"/publication/2018/iclp/","section":"publication","summary":"Recently, biological data has been increasingly produced calling for the existence of computational models able to organize and computationally reproduce existing observations. In particular, biological regulatory networks have been modeled relying on the Sign Consistency Model or the logical formalism. However, their construction still completely relies on a domain expert to choose the best functions for every network component. Due to the number of possible functions for k arguments, this is typically a process prone to error. Here, we propose to assist the modeler using logic-based tools to verify the model, identifying crucial network components responsible for model inconsistency. We intend to obtain a model building procedure capable of providing the modeler with repaired models satisfying a set of pre-defined criteria, therefore minimizing possible modeling errors.","tags":["ModRev","Model Revision","Logical Models","Answer Set Programming"],"title":"Model revision of logical regulatory networks using logic-based tools","type":"publication"},{"authors":["Filipe Gouveia","Inês Lynce","Pedro T. Monteiro"],"categories":null,"content":"ModRev is a command line tool to revise Boolean logical models of biological regulatory networks.\nThis tool was developed for UNIX and MacOSX systems.\nModRev is able to repair inconsistent Boolean models under the following:\nSet of stable state observations Set of time-series observations With synchronous update scheme With asynchronous update scheme ","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"76cfece78c98c9826d6b7826acb408c8","permalink":"https://filipegouveia.github.io/project/modrev/","publishdate":"2018-01-01T00:00:00Z","relpermalink":"/project/modrev/","section":"project","summary":"Model Revision tool for Boolean logical models of biological regulatory networks","tags":["Model Revision","ModRev","Logical Models"],"title":"ModRev","type":"project"},{"authors":["Filipe Gouveia","Pedro T. Monteiro","Vasco Manquinho","Inês Lynce"],"categories":null,"content":"","date":1502236800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1502236800,"objectID":"535deb23205fbc28341d206052605977","permalink":"https://filipegouveia.github.io/publication/2017/epia/","publishdate":"2017-08-09T00:00:00Z","relpermalink":"/publication/2017/epia/","section":"publication","summary":"Studying the performance of logic tools on solving a specific problem can bring new insights on the use of different paradigms. This paper provides an empirical evaluation of logic-based encodings for a well known board game: Ricochet Robots. Ricochet Robots is a board game where the goal is to find the smallest number of moves needed for one robot to move from the initial position to a target position, while taking into account the existing barriers and other robots. Finding a solution to the Ricochet Robots problem is NP-hard. In this work we develop logic-based encodings for the Ricochet Robots problem to feed into Boolean Satisfiability (SAT) solvers. When appropriate, advanced techniques are applied to further boost the performance of a solver. A comparison between the performance of SAT solvers and an existing ASP solution clearly shows that SAT is by far the more adequate technology to solve the Ricochet Robots problem.","tags":["Logic Programming","SAT","Boolean Satisfiability","Ricochet Robots"],"title":"Logic-Based Encodings for Ricochet Robots","type":"publication"},{"authors":["Filipe Gouveia"],"categories":null,"content":"","date":1352073600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1352073600,"objectID":"bb6668816007e39fb1e8c0fcbbaa10b4","permalink":"https://filipegouveia.github.io/publication/theses/msc/","publishdate":"2012-11-05T00:00:00Z","relpermalink":"/publication/theses/msc/","section":"publication","summary":"Different proteins have different functions determined by its structure. Proteins are a sequence of amino acids folded into a three-dimensional structure. Each amino acid is formed by an amine group, a carboxyl group and a side-chain. The side-chain is specific for each amino acid and each amino acid can have numerous possible side-chain conformations, called rotamers. A protein has an energy associated and this energy depends on the amino acids and side-chain that form the protein. Predicting the set of amino acids and respective side-chain that minimizes the total energy of a protein is therefore a very important problem, called protein design. In this work we develop a program to solve the protein design problem using Answer Set Programming. Answer Set Programming (ASP) is an approach to declarative solving problems. This work describes the ASP program implemented to solve protein design problems, using the ASP grounder gringo and the ASP solver clasp to search for the answer sets of the program. Two approaches of the protein design problem were considered: one considered that the amino acids of the protein to design are kept fixed; the other considered that the amino acids are not kept fixed and therefore the amino acids and respective side-chains must be determined. In this work were made two implementations in ASP for the protein design problem. One is a simple codification and the other uses a multi-criteria optimization. Moreover, there were implemented three algorithms of dead-end elimination (DEE): Original DEE; Simple Goldstein; and Simple Split.","tags":["Protein Design","Answer Set Programming"],"title":"Protein design using answer set programming","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"322dbaccf72a6d71f827fdb2866be935","permalink":"https://filipegouveia.github.io/teaching/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/teaching/","section":"","summary":"","tags":null,"title":"","type":"widget_page"}]